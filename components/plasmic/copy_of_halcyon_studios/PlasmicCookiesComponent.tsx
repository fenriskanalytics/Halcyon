// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 2p9VhVhxAWhB5Nusx9QUQ2
// Component: ggwn6qdMRYcu

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import { useScreenVariants as useScreenVariants_0QmF6MtAnaU } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: _0qmF6MTAnaU/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: 2p9VhVhxAWhB5Nusx9QUQ2/projectcss
import sty from "./PlasmicCookiesComponent.module.css"; // plasmic-import: ggwn6qdMRYcu/css

createPlasmicElementProxy;

export type PlasmicCookiesComponent__VariantMembers = {};
export type PlasmicCookiesComponent__VariantsArgs = {};
type VariantPropType = keyof PlasmicCookiesComponent__VariantsArgs;
export const PlasmicCookiesComponent__VariantProps =
  new Array<VariantPropType>();

export type PlasmicCookiesComponent__ArgsType = {};
type ArgPropType = keyof PlasmicCookiesComponent__ArgsType;
export const PlasmicCookiesComponent__ArgProps = new Array<ArgPropType>();

export type PlasmicCookiesComponent__OverridesType = {
  container3?: Flex__<"div">;
};

export interface DefaultCookiesComponentProps {
  className?: string;
}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicCookiesComponent__RenderFunc(props: {
  variants: PlasmicCookiesComponent__VariantsArgs;
  args: PlasmicCookiesComponent__ArgsType;
  overrides: PlasmicCookiesComponent__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $translator = usePlasmicTranslator?.();

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_0QmF6MtAnaU()
  });

  return (
    <div
      data-plasmic-name={"container3"}
      data-plasmic-override={overrides.container3}
      data-plasmic-root={true}
      data-plasmic-for-node={forNode}
      className={classNames(
        projectcss.all,
        projectcss.root_reset,
        projectcss.plasmic_default_styles,
        projectcss.plasmic_mixins,
        projectcss.plasmic_tokens,
        plasmic_antd_5_hostless_css.plasmic_tokens,
        plasmic_plasmic_rich_components_css.plasmic_tokens,
        sty.container3
      )}
    >
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox___325Zp)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4__svuMz
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "Cookie Policy"
              : "Cookie Policy"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__jb1JI
          )}
        >
          <Trans__>
            {
              'Welcome to Halcyon Studio\'s Cookie Policy. In this document, we outline how we use cookies and similar tracking technologies when you interact with our website and related services. By accessing or using our website located at www.halcyonstudio.us, or any other websites, pages, features, mobile applications, or technology owned or operated by Halcyon Studio (referred to as "Halcyon Studio," "the Company," "we," "us," or "our"), you agree to the practices described in this Cookie Policy.'
            }
          </Trans__>
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__wsH4O)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4__uVdS9
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "What Are Cookies?"
              : "What Are Cookies?"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__wyUkh
          )}
        >
          <Trans__>
            {
              'Cookies are small pieces of data stored on your device via your web browser. They allow websites or service providers to recognize your browser and capture certain information. We use cookies, as well as embedded scripts, software development kits ("SDKs"), and similar tracking technologies (collectively referred to as "Tracking Technologies"), to enhance your experience with our services and to collect information as you interact with our website.'
            }
          </Trans__>
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__zOyu)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4__nZlmb
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "Types of Cookies on Our Services"
              : "Types of Cookies on Our Services"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__qFgJj
          )}
        >
          <Trans__>
            {
              "Strictly Necessary Cookies: These cookies are essential for the proper functioning of our services. They enable you to access secure areas and cannot be disabled.\n\nPerformance or Analytic Cookies: These cookies collect information about how you use our services to help us improve and optimize them. You can disable these cookies.\n\nAdvertising or Targeting Cookies: These cookies make advertising messages more relevant to you. They are used to deliver personalized ads based on your interests. You can disable the use of these cookies."
            }
          </Trans__>
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__cBk8B)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4__nuyrj
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "How We Use Cookies on Our Services"
              : "How We Use Cookies on Our Services"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__zmtl3
          )}
        >
          <Trans__>
            {
              "We use cookies for various purposes, including:\n\nMaking our services function properly and improving them.\nSimplifying the login process by remembering your account username.\nRecognizing you when you return to our services and remembering your preferences.\nCollecting information about your activities to deliver tailored content and advertising.\nProviding a secure browsing experience."
            }
          </Trans__>
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__xYvsR)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4__sZi25
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "Your Choices"
              : "Your Choices"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text___5MvVk
          )}
        >
          <Trans__>
            {
              "Your web browser provides options to manage cookies preferences. You can:\n\nEnable, disable, or delete cookies through your browser settings. Please note that disabling cookies may affect certain features of our services.\nOpt-out of third-party advertising networks and similar entities using advertising cookies.\nAdjust Flash player settings to block Flash Cookies storage.\nOpt-out of interest-based targeting provided by participating ad servers through various platforms such as the Digital Advertising Alliance or the Network Advertising Initiative.\nUtilize browser help pages for setting cookie preferences."
            }
          </Trans__>
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__qjxBy)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4___8CiSz
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "Questions & Contact Information"
              : "Questions & Contact Information"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text__cmJqj
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "If you have any questions or concerns regarding our Cookie Policy, please contact us at admin@halcyonstudio.us."
              : "If you have any questions or concerns regarding our Cookie Policy, please contact us at admin@halcyonstudio.us"}
          </Trans__>
        </div>
      </Stack__>
      <Stack__
        as={"div"}
        hasGap={true}
        className={classNames(projectcss.all, sty.freeBox__om81O)}
      >
        <h4
          className={classNames(
            projectcss.all,
            projectcss.h4,
            projectcss.__wab_text,
            sty.h4__kO0FZ
          )}
        >
          <Trans__>
            {hasVariant(globalVariants, "screen", "mobile")
              ? "Updates to Our Cookie Policy"
              : "Updates to Our Cookie Policy"}
          </Trans__>
        </h4>
        <div
          className={classNames(
            projectcss.all,
            projectcss.__wab_text,
            sty.text___7CtNe
          )}
        >
          <Trans__>
            {
              "We may update this Cookie Policy from time to time. Any material changes will be reflected in the updated policy with an effective date. We encourage you to review this policy periodically for updates.\n\nThank you for reading our Cookie Policy."
            }
          </Trans__>
        </div>
      </Stack__>
    </div>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  container3: ["container3"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  container3: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCookiesComponent__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCookiesComponent__VariantsArgs;
    args?: PlasmicCookiesComponent__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicCookiesComponent__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicCookiesComponent__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicCookiesComponent__ArgProps,
          internalVariantPropNames: PlasmicCookiesComponent__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicCookiesComponent__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "container3") {
    func.displayName = "PlasmicCookiesComponent";
  } else {
    func.displayName = `PlasmicCookiesComponent.${nodeName}`;
  }
  return func;
}

export const PlasmicCookiesComponent = Object.assign(
  // Top-level PlasmicCookiesComponent renders the root element
  makeNodeComponent("container3"),
  {
    // Helper components rendering sub-elements

    // Metadata about props expected for PlasmicCookiesComponent
    internalVariantProps: PlasmicCookiesComponent__VariantProps,
    internalArgProps: PlasmicCookiesComponent__ArgProps
  }
);

export default PlasmicCookiesComponent;
/* prettier-ignore-end */
